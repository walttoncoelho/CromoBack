// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByNulls"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  status    Boolean
  name      String
  username  String   @unique
  email     String   @unique
  password  String
  role      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Numero {
  id            Int           @id @default(autoincrement())
  status        Boolean
  titulo        String
  descricao     String
  valor         Int
  ordemExibicao Int?
  formato       FormatoNumero @default(EXATO)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
}

enum FormatoNumero {
  EXATO
  APROXIMADO
  DISTANCIA
  MONETARIO
}

model Lead {
  id         Int      @id @default(autoincrement())
  nome       String
  email      String
  telefone   String
  mensagem   String
  newsletter Boolean
  cidadeId   Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  cidade     Cidade?  @relation(fields: [cidadeId], references: [id])
}

model Cidade {
  id         Int    @id @default(autoincrement())
  titulo     String
  codigoIbge Int    @unique
  estadoId   Int
  estado     Estado @relation(fields: [estadoId], references: [id])
  leads      Lead[]
}

model Estado {
  id         Int      @id @default(autoincrement())
  titulo     String   @unique
  uf         String   @unique
  codigoIbge Int      @unique
  cidades    Cidade[]
}

model Empreendimento {
  id          Int                  @id @default(autoincrement())
  status      Boolean
  titulo      String
  descricao   String
  // tipoEmpreendimento TipoEmpreendimento @default(RESIDENCIAL)
  slug        String               @unique
  loteInicial Int
  loteFinal   Int
  areaLote    Float
  // logoEmpreendimento
  // imagemPlantaBaixa
  // infraestrutura 
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @default(now())
  galeria     FotoEmpreendimento[]
}

// enum TipoEmpreendimento {
//   RESIDENCIAL
//   COMERCIAL
//   INDUSTRIAL
// }

model FotoEmpreendimento {
  id               Int            @id @default(autoincrement())
  status           Boolean
  arquivo          String         @unique
  ordemExibicao    Int?
  empreendimentoId Int
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  empreendimento   Empreendimento @relation(fields: [empreendimentoId], references: [id])
}
