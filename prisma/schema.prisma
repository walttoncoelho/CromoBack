// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByNulls"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  status    Boolean
  name      String
  username  String   @unique
  email     String   @unique
  password  String
  role      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Numero {
  id        Int      @id @default(autoincrement())
  titulo    String
  descricao String   @db.Text
  lotes     Int
  asfalto   Int
  rua       Int
  familias  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Lead {
  id         Int      @id @default(autoincrement())
  nome       String
  email      String
  telefone   String
  mensagem   String
  newsletter Boolean
  cidadeId   Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  cidade     Cidade?  @relation(fields: [cidadeId], references: [id])
}

model Cidade {
  id         Int    @id @default(autoincrement())
  titulo     String
  codigoIbge Int    @unique
  estadoId   Int
  estado     Estado @relation(fields: [estadoId], references: [id])
  leads      Lead[]
}

model Estado {
  id         Int      @id @default(autoincrement())
  titulo     String   @unique
  uf         String   @unique
  codigoIbge Int      @unique
  cidades    Cidade[]
}

model Empreendimento {
  id                 Int                                @id @default(autoincrement())
  status             Boolean
  statusDaConstrucao StatusDaConstrucao                 @default(EM_CONSTRUCAO)
  titulo             String
  descricao          String                             @db.Text
  tipoEmpreendimento String
  slug               String                             @unique
  lotes              Int
  areaLote           Float
  logoEmpreendimento String
  imagemPlantaBaixa  String
  createdAt          DateTime                           @default(now())
  updatedAt          DateTime                           @default(now())
  galeria            FotoEmpreendimento[]
  infraestrutura     InfraestruturaDosEmpreendimentos[]
}

enum StatusDaConstrucao {
  EM_CONSTRUCAO
  ENTREGUE
}

model Infraestrutura {
  id              Int                                @id @default(autoincrement())
  icone           String
  titulo          String
  createdAt       DateTime                           @default(now())
  updatedAt       DateTime                           @default(now())
  empreendimentos InfraestruturaDosEmpreendimentos[]
}

model InfraestruturaDosEmpreendimentos {
  infraestruturaId Int
  empreendimentoId Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())

  empreendimento Empreendimento @relation(fields: [empreendimentoId], references: [id])
  infraestrutura Infraestrutura @relation(fields: [infraestruturaId], references: [id])

  @@id([infraestruturaId, empreendimentoId])
}

model FotoEmpreendimento {
  id               Int            @id @default(autoincrement())
  status           Boolean
  arquivo          String
  ordemExibicao    Int?
  empreendimentoId Int
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  empreendimento   Empreendimento @relation(fields: [empreendimentoId], references: [id])
}

model Configuracao {
  id        Int      @id @default(autoincrement())
  titulo    String
  descricao String
  chave     String   @unique
  valor     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Banner {
  id             Int               @id @default(autoincrement())
  categoria      CategoriaDoBanner @default(HOME)
  titulo         String
  inicioExibicao DateTime
  fimExibicao    DateTime
  redirectLink   String
  desktop        String
  mobile         String
  ordemExibicao  Int?
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @default(now())
}

enum CategoriaDoBanner {
  HOME
  SOBRE
}
